import streamlit as st
import pandas as pd

# ---------------------------
# 샘플 데이터 (실제 API 연동 가능)
# ---------------------------
travel_data = {
    "일본": {
        "만족도": 4.7,
        "도시": {
            "도쿄": ["요코하마", "가마쿠라", "하코네"],
            "오사카": ["교토", "나라", "고베"],
        },
        "음식": {
            "스시 🍣": ["스시잔마이 (⭐4.5)", "긴자 규베에 (⭐4.6)", "스시 사이토 (⭐4.8)"],
            "라멘 🍜": ["이치란 라멘 (⭐4.4)", "이풍당 (⭐4.5)", "라멘 지로 (⭐4.3)"],
        },
        "불편한점": ["영어 소통 어려움", "교통비 비쌈", "현금 사용 비율 높음"]
    },
    "프랑스": {
        "만족도": 4.5,
        "도시": {
            "파리": ["베르사유", "지베르니", "몽생미셸"],
            "니스": ["칸", "모나코", "앙티브"],
        },
        "음식": {
            "크루아상 🥐": ["라뒤레 (⭐4.6)", "앙젤리나 (⭐4.5)", "폴 (⭐4.4)"],
            "와인 🍷": ["샹브레 와인바 (⭐4.7)", "라 카브 (⭐4.6)", "르 와인 숍 (⭐4.5)"],
        },
        "불편한점": ["소매치기 주의", "물가 비쌈", "프랑스어 소통 필요"]
    },
    "이탈리아": {
        "만족도": 4.6,
        "도시": {
            "로마": ["티볼리", "오르비에토", "치비타 디 반뇨레조"],
            "피렌체": ["시에나", "피사", "루카"],
        },
        "음식": {
            "피자 🍕": ["다 미켈레 (⭐4.6)", "피자 로마나 (⭐4.5)", "소르빌로 (⭐4.7)"],
            "젤라또 🍨": ["지올리티 (⭐4.6)", "베네치아 젤라또 (⭐4.5)", "라 카라벨라 (⭐4.4)"],
        },
        "불편한점": ["관광객 혼잡", "교통罷業(파업) 잦음", "소매치기 주의"]
    }
}

# ---------------------------
# Streamlit UI
# ---------------------------
st.set_page_config(page_title="해외여행 추천 웹", page_icon="🌍", layout="centered")

st.title("🌍 해외여행 만족도 & 추천 가이드")
st.write("✈️ 나라를 선택하면 만족도, 추천 도시·소도시, 음식점, 불편한 점을 알려드립니다!")

# 나라 선택
country = st.selectbox("가고 싶은 나라를 선택하세요:", list(travel_data.keys()))

if country:
    data = travel_data[country]
    st.subheader(f"🇨🇭 {country} 여행 정보")

    # 만족도
    st.metric("여행 만족도 (5점 만점)", f"{data['만족도']}")

    # 도시 & 소도시
    st.write("📍 **추천 도시 & 소도시**")
    for city, small_cities in data["도시"].items():
        st.write(f"- **{city}** ➝ {', '.join(small_cities)}")

    # 음식 & 음식점
    st.write("🍽️ **추천 음식 & 음식점**")
    for food, restaurants in data["음식"].items():
        st.write(f"- {food}")
        for r in restaurants:
            st.write(f"   • {r}")

    # 불편한 점
    st.write("⚠️ **여행 시 불편한 점**")
    for issue in data["불편한점"]:
        st.write(f"- {issue}")

    # 비교 그래프
    st.subheader("📊 나라별 여행 만족도 비교")
    df = pd.DataFrame({
        "나라": list(travel_data.keys()),
        "만족도": [travel_data[c]["만족도"] for c in travel_data]
    })
    st.bar_chart(df.set_index("나라"))

st.write("---")
st.info("💡 음식점 평점은 구글맵/네이버맵 데이터를 API로 연동하면 자동 업데이트할 수 있습니다!")
